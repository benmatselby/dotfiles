#!/usr/bin/env bash

# Pulled mainly from @necolas’s prompt: https://github.com/necolas/dotfiles

# Display the git branch name if we are in a git repo
prompt_git() {
    branchName=$(__git_ps1 %s)
    if [ "${branchName}" == "" ]; then
        return
    else
        echo -e "${white} on ${blue}${branchName}";
    fi
}

# Provide some kind of visual queue as to whether the last command was successful,
# so we don't need to keep checking $?
last_command() {
    success=$?
    if [ ${success} -ne 0 ]; then
        echo -e "${red}✗ "
    else
        echo -e "${green}✓ "
    fi
}

if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    tput sgr0 # reset colors

    bold=$(tput bold)
    reset=$(tput sgr0)

    # Solarized colors
    # (https://github.com/altercation/solarized/tree/master/iterm2-colors-solarized#the values)
    black=$(tput setaf 0)
    blue=$(tput setaf 33)
    cyan=$(tput setaf 37)
    green=$(tput setaf 64)
    orange=$(tput setaf 166)
    # shellcheck disable=SC2034
    purple=$(tput setaf 125)
    red=$(tput setaf 124)
    white=$(tput setaf 15)
    violet=$(tput setaf 61);
    yellow=$(tput setaf 136)
else
    # shellcheck disable=SC2034
    bold=""
    reset="\\e[0m"

    # shellcheck disable=SC2034
    black="\\e[1;30m"
    blue="\\e[1;34m"
    # shellcheck disable=SC2034
    cyan="\\e[1;36m"
    green="\\e[1;32m"
    orange="\\e[1;33m"
    # shellcheck disable=SC2034
    purple="\\e[1;35m"
    red="\\e[1;31m"
    white="\\e[1;37m"
    violet="\\e[1;35m";
    # shellcheck disable=SC2034
    yellow="\\e[1;33m"
fi

PS1="\\n" # newline
PS1+='$(last_command)'
if [ -n "$SSH_CONNECTION" ]; then
  PS1+="\\[$red\\]ssh@" # indicate SSH
fi
PS1+="\\[$orange\\]\\u@\\h" # hostname
PS1+="\\[$white\\] at "
PS1+="\\[$green\\]\\D{%T}" # time
PS1+="\\[$white\\] in "
PS1+="\\[$violet\\]\\w" # working directory
PS1+='$(prompt_git)' # git repository details
PS1+="\\n"
PS1+="\\[$reset$white\\]\\$ \\[$reset\\]" # $ (and reset color)

export PS1
